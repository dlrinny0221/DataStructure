%!PS-Adobe-3.0
%%Creator: groff version 1.22.2
%%CreationDate: Tue Feb  9 13:19:32 2016
%%Title: asg4c-mydc-stackbignum.ps
%%BoundingBox: 0 0 612 792
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font NewCenturySchlbk-Bold
%%+ font NewCenturySchlbk-Roman
%%+ font NewCenturySchlbk-Italic
%%+ font Symbol
%%DocumentSuppliedResources: procset grops 1.22 2
%%+ font Courier-Elite-Bold
%%+ font Courier-Elite
%%Pages: 3
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.22 2
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
DEFS/BPhook known{DEFS begin BPhook end}if
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne
2 index/UniqueID ne
and
{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
mark
}bind def
/PEND{
cleartomark
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Bold
%%IncludeResource: font NewCenturySchlbk-Bold
%%IncludeResource: font NewCenturySchlbk-Roman
%%IncludeResource: font NewCenturySchlbk-Italic
%%IncludeResource: font Symbol
%%BeginResource: font Courier-Elite-Bold
%%DocumentNeededResources: font Courier-Bold
/MakeTransformedFont{
findfont dup maxlength dict begin
{
exch dup dup/FID ne exch/UniqueID ne and{
exch def
}{
pop pop
}ifelse
}forall
/FontBBox
currentdict/FontBBox get
4 array copy def
FontBBox aload pop
4 index transform 4 2 roll
4 index transform 4 2 roll
FontBBox astore pop
FontMatrix exch matrix concatmatrix
/FontMatrix exch def
dup/FontName exch def
currentdict end
definefont pop
}bind def
/Courier-Elite-Bold
[ .833333333 0 0 1 0 0 ]
/Courier-Bold
MakeTransformedFont
%%EndResource
%%BeginResource: font Courier-Elite
%%DocumentNeededResources: font Courier
/MakeTransformedFont{
findfont dup maxlength dict begin
{
exch dup dup/FID ne exch/UniqueID ne and{
exch def
}{
pop pop
}ifelse
}forall
/FontBBox
currentdict/FontBBox get
4 array copy def
FontBBox aload pop
4 index transform 4 2 roll
4 index transform 4 2 roll
FontBBox astore pop
FontMatrix exch matrix concatmatrix
/FontMatrix exch def
dup/FontName exch def
currentdict end
definefont pop
}bind def
/Courier-Elite
[ .833333333 0 0 1 0 0 ]
/Courier
MakeTransformedFont
%%EndResource
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/NewCenturySchlbk-Italic@0 ENC0/NewCenturySchlbk-Italic RE
/Courier-Elite-Bold@0 ENC0/Courier-Elite-Bold RE/Courier-Elite@0 ENC0
/Courier-Elite RE/NewCenturySchlbk-Roman@0 ENC0/NewCenturySchlbk-Roman
RE/NewCenturySchlbk-Bold@0 ENC0/NewCenturySchlbk-Bold RE
%%EndProlog
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
.48 LW 540 54 72 54 DL 540 56 72 56 DL/F0 12/NewCenturySchlbk-Bold@0 SF
(CMPS-012B \203 W)72 50 Q
(inter 2016 \203 Program 4 \203 Arbitrary Precision Math)-.216 E/F1 12
/NewCenturySchlbk-Roman@0 SF 3.336(1o)25.968 G 3.336(f3)-3.336 G/F2 11
/Courier-Elite@0 SF
($Id: asg4c-mydc-stackbignum.mm,v 1.36 2016-02-09 13:19:32-08 - - $)72
67 Q(PWD: /afs/cats.ucsc.edu/courses/cmps012b-wm/Assignments/asg4c-mydc\
-stackbignum)72 80 Q(URL: http://www2.ucsc.edu/courses/cmps012b-wm/:/As\
signments/asg4c-mydc-stackbignum/)72 93 Q F0 3.444(1. Overview)72 117 R
F1 .697(In this assignment you will implement a subset of the)72 137 R
/F3 12/Courier-Elite-Bold@0 SF(dc)4.033 E F1 .697
(\(1\) arbitrary precision cal-)B(culator)72 151 Q 8.491(.F)-1.2 G 1.819
(or speci\214cations)-9.151 F 5.155(,r)-.3 G 1.819
(ead the man page for that utility)-5.155 F 5.155(,a)-1.5 G 1.819
(nd experiment by)-5.155 F(running)72 165 Q F3(dc)3.826 E F1(itself)
3.826 E 7.162(.Y)-.444 G .49(ou will implement seven of its operators)
-8.362 F(:)2 E F3(+)7.161 E F1(,)A F3(-)3.825 E F1(,)A F3(*)3.825 E F1
(,)A F3(c)3.825 E F1(,)A F3(f)3.825 E F1(,)A F3(p)3.825 E F1(,)A F3(q)
3.825 E F1 7.161(.Y)C(our)-8.361 E
(program will be an executable image called)72 179 Q F3(mydc)3.336 E F1
(.)A F0 3.444(2. Modules)72 205 R(in the program)3.444 E F1 1.255
(The following modules are part of the program.)72 225 R -.66(Fo)7.927 G
4.591(ra).66 G 1.255(ll but)-4.591 F F3(main)4.591 E F1 4.592(ah)4.591 G
1.256(eader \()-4.592 F F3(.h)A F1 4.592<298c>C(le)-4.592 E
(speci\214es the interface whic)72 239 Q 3.336(hi)-.084 G 3.336(sa)
-3.336 G(ccompanied by an implementation \()-3.336 E F3(.c)A F1 3.336
<298c>C(le)-3.336 E(.)-.216 E 2.664(\(a\) Module)81.336 259 R F3(debug)
3.336 E F1(contains useful debugging and tracing information.)3.336 E
2.664(\(b\) Module)81.336 279 R F3(stack)5.262 E F1 1.926
(is a parameterized stac)5.262 F 5.262(ku)-.084 G 1.926(sing an arra)
-5.262 F 5.262(yi)-.12 G 1.926(mplementation with)-5.262 F(arra)102 293
Q 3.336(yd)-.12 G(oubling to take care of a full stac)-3.336 E(k.)-.084
E 2.664(\(c\) Module)82.68 313 R F3(bigint)3.637 E F1 .301
(is the important part of this project and handles multiprecision)3.637
F(integer arithmetic using an arra)102 327 Q 3.336(yo)-.12 G 3.336(fc)
-3.336 G(haracters)-3.42 E(.)-.3 E 2.664(\(d\) Module)81.12 347 R F3
(token)3.336 E F1
(reads long integers providing input to the rest of the program.)3.336 E
2.664(\(e\) Module)82.008 367 R F3(main)3.336 E F1
(handles user interface)3.336 E 3.336(,i)-.216 G(nput and output.)-3.336
E F0 3.444(3. Big)72 393 R(integer implementation)3.444 E F1 -.66(Fo)72
413 S(llowing is a more detailed discussion of how to implement the).66
E F3(bigint)3.336 E F1(module)3.336 E(.)-.216 E 2.664(\(a\) Before)
81.336 433 R 1.208(attempting to implement)4.544 F F3(bigint)4.543 E F1
4.543(,p)C 1.207(erform eac)-4.543 F 4.543(ho)-.084 G 4.543(ft)-4.543 G
1.207(he three operations)-4.543 F 1.461(on paper)102 447 R 4.797(,r)
-1.2 G 1.462
(eminding yourself how to perform the operations without a calcu-)-4.797
F(lator)102 461 Q(.)-1.2 E 2.664(\(b\) A)81.336 481 R F3(bigint)4.156 E
F1 .82(consists of an arra)4.156 F 4.156(yo)-.12 G 4.155(fd)-4.156 G
(igits)-4.155 E 7.491(.I)-.3 G .819
(ndex 0 has the least signi\214cant digit,)-7.491 F .994
(and the end of the arra)102 495 R 4.33(yh)-.12 G .994
(as the most signi\214cant digit.)-4.33 F(Eac)7.667 E 4.331(hb)-.084 G
.995(yte contains a)-4.331 F 3.522(single digit in the range 0)102 509 R
-.696(... 9,)2.64 F(inc)6.857 E(lusive)-.084 E 10.193(.T)-.216 G 3.521
(he capacity \214eld speci\214es the)-10.193 F 1.707
(dimension of the arra)102 523 R 4.707 -1.5(y, a)-.12 H 1.707
(nd the size \214eld speci\214es the number of signi\214cant)1.5 F
(digits in the arra)102 537 Q 3 -1.5(y, w)-.12 H
(ith leading zeros suppressed.)1.5 E 2.664(\(c\) Addition,)82.68 557 R
1.073(if the signs are the same)4.409 F 7.745(:c)2 G(all)-7.745 E F3
(do_add)4.409 E F1 1.073(to actually perform the addi-)4.409 F 1.343
(tion and return a new)102 571 R F3(bigint)4.679 E F1 8.015(.T)C 1.343
(hen set the sign to be the sign of one of the)-8.015 F(arguments)102
585 Q(.)-.3 E 2.664(\(d\) Addition,)81.12 605 R .954
(if the signs are different)4.29 F 7.626(:c)2 G(all)-7.626 E F3(do_sub)
4.29 E F1 .954(with the larger number as its)4.29 F .885
(left operand and the smaller number as the right operand.)102 619 R
.886(Then set the sign)7.557 F(to that of the larger number)102 633 Q(.)
-1.2 E 2.664(\(e\) Subtraction)82.008 653 R 6.672(:i)2 G 3.336(ft)-6.672
G(he signs are different, call)-3.336 E F3(do_add)3.336 E F1 3.336(,o)C
(therwise call)-3.336 E F3(do_sub)3.336 E F1(.)A(\(f\))84.012 673 Q F3
(Do_add)6 E F1(and)3.371 E F3(do_sub)3.371 E F1 .035
(are called from either the addition or subtraction function to)3.371 F
1.01(do the arra)102 687 R 4.346(yw)-.12 G 4.346(ork. Note)-4.346 F 1.01
(that it is marked)4.346 F F3(static)4.346 E F1 1.011
(and is not called outside of)4.347 F(the module)102 701 Q(.)-.216 E 0
Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
.48 LW 540 54 72 54 DL 540 56 72 56 DL/F0 12/NewCenturySchlbk-Bold@0 SF
(CMPS-012B \203 W)72 50 Q
(inter 2016 \203 Program 4 \203 Arbitrary Precision Math)-.216 E/F1 12
/NewCenturySchlbk-Roman@0 SF 3.336(2o)25.968 G 3.336(f3)-3.336 G(\(g\))
81.564 74 Q/F2 12/Courier-Elite-Bold@0 SF(Do_add)6 E F1 .044
(allocates a new)3.38 F F2(bigint)3.38 E F1 .044
(with space for a number of digits one larger than)3.38 F .313
(the largest operand.)102 88 R .314(Then it loops across eac)6.985 F
3.65(ha)-.084 G(rra)-3.65 E 3.65(yf)-.12 G .314
(rom index [0] to the end,)-3.65 F
(adding and carrying as is done by hand)102 102 Q(:)2 E F2
(digit = this->digits[index] + that->digits[index] + carry;)132 122 Q
(result->digits[index] = digit % 10;)132 136 Q(carry = digit / 10;)132
150 Q F1(There is a little extra tric)102 170 Q
(kiness at the high end of the shorter number)-.084 E(.)-1.2 E(\(h\))
80.676 190 Q F2(Do_sub)6 E F1 .852(allocates a new)4.188 F F2(bigint)
4.188 E F1 .852(whose size is the same as the left operand, and)4.188 F
(then performs the subtraction instead of addition)102 204 Q(:)2 E F2
(digit = this->digits[index] - that->digits[index] - borrow + 10;)132
224 Q(result->digits[index] = digit % 10;)132 238 Q
(borrow = 1 - digit / 10;)132 252 Q F1
(After computing the result, trim off high-order zeros)102 272 Q(.)-.3 E
2.664(\(i\) Multiplication)84.228 292 R 1.18
(proceeds by allocating a new)4.516 F F2(bigint)4.516 E F1 1.18
(whose size is equal to the)4.516 F .269
(sum of the sizes of the other two operands)102 306 R 6.941(.I)-.3 G(f)
-6.941 E F0(u)3.605 E F1 .269(is a vector of size)3.605 F/F3 12
/NewCenturySchlbk-Italic@0 SF(m)4.037 E F1(and)3.616 E F0(v)3.604 E F1
.268(is a)3.604 F .03(vector of size)102 320 R F3(n)3.799 E F1 3.367(,t)
.012 G .031(hen in)-3.367 F F3(O)3.487 E F1(\().12 E F3(mn).432 E F1
3.367(\)s).012 G .031(peed, perform an outer loop over one argument)
-3.367 F .254(and an inner loop over the other argument, adding the new\
 partial products to)102 334 R 1.004(the product)102 348 R F0(p)4.34 E
F1 1.004(as you would by hand.)4.34 F 1.005
(The algorithm can be described mathe-)7.676 F(matically as follows)102
362 Q(:)2 E/F4 13/NewCenturySchlbk-Bold@0 SF(p)132 383 Q/F5 13/Symbol SF
3.64<ac46>3.64 G F4(for)132 398 Q/F6 13/NewCenturySchlbk-Italic@0 SF(i)
7.553 E F5<ce>4.68 E/F7 13/NewCenturySchlbk-Roman@0 SF([)2.6 .702 M 2.86
(0.)-.702 K(..)-2.86 E F6(m)3.328 E F5(-)2.873 E F7(1)2.86 E(]).702 I(:)
3.64 -.702 M F6(c)158.624 413 Q F5<ac>3.64 E F7(0)3.64 E F4(for)158 428
Q F6(j)10.088 E F5<ce>5.369 E F7([)2.6 .702 M 2.86(0.)-.702 K(..)-2.86 E
F6(n)3.328 E F5(-)2.873 E F7(1)2.86 E(]).702 I(:)3.64 -.702 M F6(d)
184.624 443 Q F5<ac>3.952 E F4(p)3.64 E/F8 9.1/NewCenturySchlbk-Italic@0
SF(i).191 3.12 M/F9 9.1/Symbol SF(+)A F8(j)1.966 E F5(+)3.992 -3.12 M F4
(u)2.86 E F8(i).191 2.6 M F4(v).65 -2.6 M F8(j)1.966 2.6 M F5(+)3.992
-2.6 M F6(c)3.484 E F4(p)184 458.436 Q F8(i).191 3.12 M F9(+)A F8(j)
1.966 E F5<ac>4.772 -3.12 M F6(d)4.264 E F7 -.754(remainder 10)3.172 F
F6(c)184.624 473.872 Q F5<ac>3.64 E<eb>3.64 2.145 M F6 3.172<64f7>.624
-2.145 O F7(10)-.312 E F5<fb>2.145 I F4(p)158 488.872 Q F8(i).191 3.12 M
F9(+)A F8(n).328 E F5<ac>4.299 -3.12 M F6(c)4.264 E F1 2.664(\(j\) The)
84.456 508.872 R 1.069
(division and remainder algorithms are actually a single algorithm whic)
4.406 F(h)-.084 E 2.266(produces both results)102 522.872 R 5.603(,t)-.3
G 2.267(hen discards the one not needed.)-5.603 F 2.267
(This algorithm is)8.939 F(complicated and not part of this assignment.)
102 536.872 Q 2.664(\(k\) Note)80.892 556.872 R(that)5.198 E F2(malloc)
5.198 E F1 1.861(\(3\) returns uninitialized storage)B 5.197(,b)-.216 G
(ut)-5.197 E F2(calloc)5.197 E F1 1.861(\(3\) sets its allo-)B .183
(cated storage to 0, so)102 570.872 R F2(new_bigint)3.52 E F1(calls)3.52
E F2(calloc)3.52 E F1 3.52(,n)C(ot)-3.52 E F2(malloc)3.52 E F1 3.52(,t)C
3.52(oa)-3.52 G .184(llocate the under)-3.52 F(-)-.444 E(lying arra)102
584.872 Q(ys)-.12 E 6.672(.F)-.3 G(rom the synopsis of)-6.792 E F2
(malloc)3.336 E F1 -1.336(\(3\) :)B F2(#include <stdlib.h>)132 604.872 Q
(void *calloc \(size_t nmemb, size_t size\);)132 618.872 Q
(void *malloc \(size_t size\);)132 632.872 Q
(void *realloc \(void *ptr, size_t size\);)132 646.872 Q
(void free \(void *ptr\);)132 660.872 Q F0 3.444(4. T)72 686.872 R
(esting your program)-.888 E F1 -1.2(Yo)72 706.872 S 1.678
(ur program should write exactly the same output to both)1.2 F F2
(stdout)5.014 E F1(and)5.014 E F2(stderr)5.014 E F1(as)5.014 E(does)72
720.872 Q F2(dc)4.635 E F1 1.299
(\(1\), provided that inputs do not contain those facilities of)B F2(dc)
4.636 E F1 1.3(that your pro-)4.636 F(gram is not expected to imitate)72
734.872 Q 6.672(.F)-.216 G(or example)-7.332 E(:)2 E 0 Cg EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
.48 LW 540 54 72 54 DL 540 56 72 56 DL/F0 12/NewCenturySchlbk-Bold@0 SF
(CMPS-012B \203 W)72 50 Q
(inter 2016 \203 Program 4 \203 Arbitrary Precision Math)-.216 E/F1 12
/NewCenturySchlbk-Roman@0 SF 3.336(3o)25.968 G 3.336(f3)-3.336 G/F2 12
/Courier-Elite-Bold@0 SF(dc <test.in >test-dc.out 2>test-dc.err)102 74 Q
(mydc <test.in >test-mydc.out 2>test-mydc.err)102 88 Q
(diff test-dc.out test-mydc.out)102 102 Q
(diff test-dc.err test-mydc.err)102 116 Q F1 .889(Both of the)72 136 R
F2(diff)4.225 E F1 .889
(\(1\) commands should produce no output for comparing)B F2(stdout)4.225
E F1 4.225(,a)C(nd)-4.225 E
(only a difference in the name of the ELF for)72 150 Q F2(diff)3.336 E
F1(ing)A F2(stderr)3.336 E F1(.)A F0 3.444(5. What)72 176 R(to submit)
3.444 E F1(Submit)72 196 Q F2(Makefile)4.055 E F1(,)A F2(README)4.055 E
F1(,)A F2(scanner.l)4.055 E F1 4.055(,a)C .719
(nd all C source and header \214les necessary for)-4.055 F .162
(the grader to build your program with the command)72 210 R F2(make)
3.498 E F1 6.833(.I)C 3.497(fy)-6.833 G .161(ou are doing pair pro-)
-3.497 F(gramming)72 224 Q 3.336(,s)-.3 G
(ee the additional requirements)-3.336 E(.)-.3 E 0 Cg EP
%%Trailer
end
%%EOF
