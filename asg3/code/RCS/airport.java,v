head	1.2;
access;
symbols;
locks;
comment	@# @;


1.2
date	2013.02.01.01.00.19;	author -;	state -;
branches;
next	1.1;

1.1
date	2012.02.07.23.43.17;	author -;	state -;
branches;
next	;


desc
@@


1.2
log
@-
@
text
@// $Id: airport.java,v 1.1 2012-02-07 15:43:17-08 - - $

//
// Starter code for the airport utility.
//

import java.io.*;
import java.util.Scanner;
import static java.lang.System.*;

class airport {
   private static final String STDIN_FILENAME = "-";

   public static treemap load_database (String database_name) {
      treemap tree = new treemap ();
      try {
         Scanner database = new Scanner (new File (database_name));
         for (int linenr = 1; database.hasNextLine(); ++linenr) {
            String line = database.nextLine();
            if (line.matches ("^\\s*(#.*)?$")) continue;
            String[] keyvalue = line.split (":");
            if (keyvalue.length != 2) {
               misc.warn (database_name, linenr, "invalid line");
               continue;
            }
            tree.put (keyvalue[0], keyvalue[1]);
         }
         database.close();
      }catch (IOException error) {
         misc.warn (error.getMessage());
      }
      return tree;
   } 

   public static void main (String[] args) {
      treemap tree = load_database (args[0]);
      Scanner stdin = new Scanner (in);
      while (stdin.hasNextLine()) {
         String airport = stdin.nextLine().toUpperCase().trim();
         String airport_name = tree.get (airport);
         if (airport_name == null) {
            out.printf ("%s: no such airport%n", airport);
         }else {
            out.printf ("%s = %s%n", airport, airport_name);
         }
      }
      tree.debug_tree ();
      exit (misc.exit_status);
   }

}
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: airport.java,v 1.1 2010-01-28 21:05:23-08 - - $
a11 1
   // Static program constants.
a12 18
   private static final String JARNAME = get_jarname();
   private static final int EXIT_SUCCESS = 0;
   private static final int EXIT_FAILURE = 1;

   // Static exit status variable.
   private static int exit_status = EXIT_SUCCESS;

   // A basename is the final component of a pathname.
   // If a java program is run from a jar, the classpath is the
   // pathname of the jar.
   private static String get_jarname() {
      String jarpath = getProperty ("java.class.path");
      int lastslash = jarpath.lastIndexOf ('/');
      if (lastslash < 0) return jarpath;
      return jarpath.substring (lastslash + 1);
   }


d23 1
a23 3
               exit_status = EXIT_FAILURE;
               err.printf ("%s: %s:%d: invalid line", 
                           JARNAME, database_name, linenr);
d30 1
a30 2
         exit_status = EXIT_FAILURE;
         err.printf ("%s: %s%n", JARNAME, error.getMessage());
d48 1
a48 1
      exit (exit_status);
@
